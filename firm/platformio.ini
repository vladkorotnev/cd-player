[platformio]
; Set a path to a cache folder
build_cache_dir = ../local/firm_build_cache
extra_configs =
  local/pio_*.ini

[env:esp32dev]
build_flags = -DFVU_FLAVOR=\"ESPER_OG_8M\"
    ; EsperGUI settings
    -DEGUI_GP1232_DOUBLE_BUFFER=true
    ; AudioTools settings
    -DHELIX_CHUNK_SIZE=1024
    -DAAC_MAX_OUTPUT_SIZE=10240 -DAAC_MIN_FRAME_SIZE=1024 
    -DMP3_MAX_OUTPUT_SIZE=10240 -DMP3_MIN_FRAME_SIZE=1024 
    -DHTTP_MAX_LEN=1048576
    ; Other flags
    -DBOARD_HAS_PSRAM 
    -DCONFIG_SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY 
    -O3 -DCORE_DEBUG_LEVEL=3 
    -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unused-function
    ; Shut up GCC in IDF
    -Wno-reorder -Wno-missing-field-initializers -Wno-format
    ; Modern code is better huh
    -std=gnu++17
build_unflags = -std=gnu++11
platform = espressif32
framework = arduino, espidf
board = esp32dev
build_type = debug
board_build.partitions = partitions.csv
board_upload.flash_size = 8MB
board_upload.maximum_size = 8388608
board_build.filesystem = littlefs
upload_speed = 921600
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
lib_deps = 
    ESP32-A2DP=https://github.com/vladkorotnev/ESP32-A2DP.git#build_on_pio
    ArduinoAudioTools=https://github.com/pschatzmann/arduino-audio-tools.git#5c3cc99
    libhelix=https://github.com/pschatzmann/arduino-libhelix.git#a2b00be
debug_tool = custom
debug_server = 
    $PLATFORMIO_CORE_DIR/packages/tool-openocd-esp32/bin/openocd
    -f
    $PROJECT_DIR/helper/debugprobe.cfg
extra_scripts = 
    pre:helper/env-extra.py
    post:helper/check-size-correctly.py
    post:helper/check-localized-strings.py
